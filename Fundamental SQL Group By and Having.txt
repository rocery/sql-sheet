SELECT * FROM customer;
id, Name, address

SELECT * FROM product;
ID, product_name, price, speed_limit, date_active, end_active, active

SELECT * FROM subscription;
Id, customer_id, product_id, subscription_date, end_date

SELECT * FROM Invoice;
invoice_id, invoice_code, customer_id, invoice_date, product_id, total_price, pinalty

SELECT * FROM payment;
payment_id, invoice_id, payment_amout, payment_time

* Having *
SELECT nama_kolom
FROM nama_table
GROUP BY nama_kolom
HAVING kondisi

// Contoh penggunaan HAVING
SELECT customer_id FROM Subscription GROUP BY customer_id HAVING COUNT(customer_id) > 1;

// Menampilkan konsumen yang berubah berlangganan
SELECT 
	customer_id,
    product_id,
    subscription_date
FROM Subscription 
WHERE customer_id IN 
	(SELECT 
     customer_id 
     FROM Subscription 
     GROUP BY customer_id 
     HAVING COUNT(customer_id) > 1
  	) 
ORDER BY customer_id ASC;
// Menampilkan detail konsumen
SELECT b.name,
	   b.address,
       b.phone, 
       a.product_id, 
       a.subscription_date 
FROM subscription a 
JOIN customer b 
ON a.customer_id=b.id
WHERE b.id IN 
(
	SELECT 
    	customer_id 
        FROM Subscription 
    GROUP BY customer_id 
    HAVING COUNT(customer_id) > 1
) 
ORDER BY b.id ASC;

*MAX MIN AVG*
SELECT product_id, MAX(total_price) AS total FROM invoice GROUP BY product_id;
SELECT product_id, MAX(total_price) AS total FROM invoice GROUP BY product_id HAVING MAX(total_price) > 1000000;
SELECT product_id, MAX(pinalty) AS total FROM invoice GROUP BY product_id HAVING MAX(pinalty) > 30000;

SELECT product_id, MIN(total_price) AS total FROM invoice GROUP BY product_id;
SELECT product_id, MIN(total_price) AS total FROM invoice GROUP BY product_id HAVING MIN(total_price) < 500000;
SELECT product_id, MIN(pinalty) AS total FROM invoice GROUP BY product_id HAVING MIN(pinalty) < 50000;

SELECT product_id, AVG(total_price) AS total FROM invoice GROUP BY product_id;
SELECT product_id, AVG(total_price) AS total FROM invoice GROUP BY product_id HAVING AVG(total_price) > 100000;
SELECT product_id, AVG(pinalty) AS total FROM invoice GROUP BY product_id HAVING AVG(pinalty) > 30000;

SELECT
	product_id, AVG(pinalty), COUNT(customer_id) AS total
FROM invoice
GROUP BY product_id
HAVING COUNT(customer_id) > 20;
